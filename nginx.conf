# Define a group of backend servers for load balancing
upstream vllm_backends {
    #least_conn;  # (optional) Use least connection method for load balancing
    # By default, Nginx uses round-robin (requests distributed evenly)
    server 192.168.1.1:8000 max_fails=3 fail_timeout=30s;  # Backend 1 with failure handling (by passive health checks)
    server 192.168.1.2:8000 max_fails=3 fail_timeout=30s;  # Backend 2 with failure handling (by passive health checks)
    server 192.168.1.3:8000 max_fails=3 fail_timeout=30s;  # Backend 3 with failure handling (by passive health checks)
    server 192.168.1.4:8000 max_fails=3 fail_timeout=30s;  # Backend 4 with failure handling (by passive health checks)
    server 192.168.1.5:8000 max_fails=3 fail_timeout=30s;  # Backend 5 with failure handling (by passive health checks)
    server 192.168.1.6:8000 max_fails=3 fail_timeout=30s;  # Backend 6 with failure handling (by passive health checks)
    server 192.168.1.7:8000 max_fails=3 fail_timeout=30s;  # Backend 7 with failure handling (by passive health checks)
    server 192.168.1.8:8000 max_fails=3 fail_timeout=30s;  # Backend 8 with failure handling (by passive health checks)

    # This is passive health checking (max_fails=3 fail_timeout=30s;). Nginx marks a server as down if it fails to respond correctly.
    # max_fails=3 → After 3 consecutive failed requests (connection error, timeout, 502/503), Nginx stops sending requests to this server.
    # fail_timeout=30s → Backend is marked “unavailable” for 30 seconds.
    # Works without sending extra probes, just based on normal traffic
    # For active health checks, consider using the Nginx Plus commercial version.

    #keepalive 32;  # Optional. Keeps 32 idle connections open to the backend servers to reduce connection setup overhead for high-traffic APIs.
    
}

server {
    listen 80;  # Listen on HTTP port 80
    server_name _;  # Default catch-all server name with underscore wildcard 
    # The _ is a placeholder for any domain. Useful when you don’t have a specific domain.

    root /mnt/data/office_work/vllms_inference;  # Root directory for static files
    index chatbot.html;  # Default index file to serve

    location / {
        try_files $uri $uri/ =404;  # Serve static files or return 404 if not found
    }

    location /v1/ {
        proxy_pass http://vllm_backends;  # Forward /v1/ API requests to backend group

        # Preserve important client and request information
        proxy_set_header Host $host;  # Forward the original Host header
        proxy_set_header X-Real-IP $remote_addr;  # Add the client’s real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Preserve proxy chain
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward original protocol (HTTP/HTTPS)

        # Connection and response timeout settings
        proxy_connect_timeout 5s;  # Timeout for establishing a connection to backend
        proxy_read_timeout 600s;   # Timeout for reading a response from backend
        proxy_send_timeout 600s;   # Timeout for sending a request to backend

        # Retry logic for failed backend responses
        proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;  # Conditions for retry
        proxy_next_upstream_tries 2;  # Retry on another backend up to 2 times
    }
}
