# Kubeadm configuration for a highly available cluster with hybrid control plane nodes.
# This file is used to initialize the first control plane node (192.168.1.1).

apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  # IP address of the node where 'kubeadm init' is executed.
  advertiseAddress: "192.168.1.1"
  bindPort: 6443
nodeRegistration:
  name: "pc1"
  criSocket: "unix:///var/run/containerd/containerd.sock"
  # Ensure the path matches your container runtime socket.

---

apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
# Stable Kubernetes version
kubernetesVersion: "v1.30.5"

# Cluster name
clusterName: "gpt-cluster"

# The controlPlaneEndpoint is your load balancer's VIP
controlPlaneEndpoint: "192.168.1.100:6443"

apiServer:
  certSANs:
    # Include VIP + all control-plane IPs to avoid TLS errors
    - "192.168.1.100"   # VIP (HAProxy + Keepalived)
    - "192.168.1.1"     # Control Plane 1
    - "192.168.1.3"     # Control Plane 2
    - "192.168.1.5"     # Control Plane 3
    - "192.168.1.9"     # HAProxy 1
    - "192.168.1.10"    # HAProxy 2
  timeoutForControlPlane: 4m0s

controllerManager: {}
scheduler: {}

# Networking â€” ensure this matches your chosen CNI (Flannel default)
networking:
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"

---

# Ensure kubelet's cgroup driver matches container runtime.
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: "systemd"
