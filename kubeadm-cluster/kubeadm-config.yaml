# Kubeadm configuration for a highly available cluster with hybrid control plane nodes.
# This file is used to initialize the first control plane node (192.168.1.9).
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  # IP address of the node you are running 'kubeadm init' on.
  advertiseAddress: "192.168.1.9"
  bindPort: 6443
nodeRegistration:
  name: "control-plane-1"
  criSocket: "unix:///var/run/containerd/containerd.sock"
  # This is the endpoint socket through which the kubelet talks to the container runtime. Make sure it matches your container runtime's socket path.
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
# Use a specific, stable Kubernetes version.
kubernetesVersion: "v1.30.5"
# The cluster name.
clusterName: "gpt-cluster"
# The controlPlaneEndpoint is the address of your load balancer. Make sure you’re running something like HAProxy + Keepalived (for VIP failover) or another load balancer on-prem. 
controlPlaneEndpoint: "192.168.1.100:6443"
# The apiServer.certSANs list must include your load balancer VIP and all control plane IPs.
apiServer:
  certSANs:
  # This avoids TLS errors when joining control planes and accessing the API server.
  # This is a placeholder (k8s-api.example.com). Replace with your actual DNS name for the VIP
  # or remove this line if you don't have one.
  #- "k8s-api.example.com"
  # 1. Load Balancer VIP (IP Address)
  - "192.168.1.100"
  
  # 2. Control Plane Node IPs
  - "192.168.1.9"  # control-plane-1
  - "192.168.1.3"  # pc3
  - "192.168.1.8"  # pc8
  
  # 3. All System Hostnames (Control Planes and Workers)
  # This includes all hostnames so any node can reach the API server by its name.
  - "control-plane-1"
  - "pc1"
  - "pc2"
  - "pc3"
  - "pc4"
  - "pc5"
  - "pc6"
  - "pc7"
  - "pc8"
# Networking configuration for Flannel. Matches Flannel’s default pod CIDR. Adjust if needed. 
networking:
  podSubnet: "10.244.0.0/16"
---
# Ensure the kubelet's cgroup driver matches the container runtime's.
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: "systemd"

